{"version":3,"sources":["utilities/colors.js","utilities/data.js","components/TaskCard.js","components/ProfileCard.js","App.js","index.js"],"names":["colorsPallete","blue","liglhtRed","softBlue","lightRed","limeGreen","violet","softOrange","veryDarkBlue","darkBlue","desaturatedBlue","paleBlue","sampleData","Wrapper","styled","article","HeaderSection","main","props","background","BodySection","header","HeaderImaeg","img","Title","h1","HoursElapsedText","p","BodyTop","Button","button","ElippsiesIcon","PreviousTimePeriodText","small","BodyBottom","div","headerColorPicker","index","headerImage","imageName","imagePath","concat","handlePreviousTime","timeframes","console","log","TaskCard","title","selectedPeriod","useContext","TimePeriodContext","useState","isOpen","setIsOpen","src","hover","onRequestClose","style","overlay","position","top","left","right","bottom","backgroundColor","border","content","opacity","borderRadius","padding","overflow","margin","height","fontSize","paddingLeft","paddingTop","alt","objectFit","width","display","justifyContent","alignItems","toLowerCase","current","previous","onClick","PersonalInformationWrapper","CircularProfilePicture","ReportText","Username","TimePeriodSelectionWrapper","TimePeriod","ProfileCard","gridPosition","setSelectedPeriod","gridPos","map","period","React","createContext","GridLayout","section","App","Provider","value","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d8cc536.chunk.js","sourcesContent":["\r\nexport const colorsPallete = {\r\n  blue: \"#5847eb\",\r\n  liglhtRed: \"#FF8B64\",\r\n  softBlue: \"#56C2E6\",\r\n  lightRed: \"#FF5E7D\",\r\n  limeGreen: \"#4BCF83\",\r\n  violet: \"#7235D1\",\r\n  softOrange: \"#F1C75B\",\r\n\r\n  veryDarkBlue: \"#0f1424\",\r\n  darkBlue: \"#1c1f4a\",\r\n  desaturatedBlue: \"#6f76c8\",\r\n  paleBlue: \"#bdc1ff\"\r\n};\r\n\r\n\r\n","const sampleData = [\n  {\n    \"title\": \"Work\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 5,\n        \"previous\": 7\n      },\n      \"weekly\": {\n        \"current\": 32,\n        \"previous\": 36\n      },\n      \"monthly\": {\n        \"current\": 103,\n        \"previous\": 128\n      }\n    }\n  },\n  {\n    \"title\": \"Play\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 1,\n        \"previous\": 2\n      },\n      \"weekly\": {\n        \"current\": 10,\n        \"previous\": 8\n      },\n      \"monthly\": {\n        \"current\": 23,\n        \"previous\": 29\n      }\n    }\n  },\n  {\n    \"title\": \"Study\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 0,\n        \"previous\": 1\n      },\n      \"weekly\": {\n        \"current\": 4,\n        \"previous\": 7\n      },\n      \"monthly\": {\n        \"current\": 13,\n        \"previous\": 19\n      }\n    }\n  },\n  {\n    \"title\": \"Exercise\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 1,\n        \"previous\": 1\n      },\n      \"weekly\": {\n        \"current\": 4,\n        \"previous\": 5\n      },\n      \"monthly\": {\n        \"current\": 11,\n        \"previous\": 18\n      }\n    }\n  },\n  {\n    \"title\": \"Social\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 1,\n        \"previous\": 3\n      },\n      \"weekly\": {\n        \"current\": 5,\n        \"previous\": 10\n      },\n      \"monthly\": {\n        \"current\": 21,\n        \"previous\": 23\n      }\n    }\n  },\n  {\n    \"title\": \"Self Care\",\n    \"timeframes\": {\n      \"daily\": {\n        \"current\": 0,\n        \"previous\": 1\n      },\n      \"weekly\": {\n        \"current\": 2,\n        \"previous\": 2\n      },\n      \"monthly\": {\n        \"current\": 7,\n        \"previous\": 11\n      }\n    }\n  }\n]\n\nexport default sampleData;","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TimePeriodContext } from \"../App\";\r\nimport { colorsPallete } from \"../utilities/colors\";\r\nimport Modal from 'react-modal';\r\nimport sampleData from \"../utilities/data\";\r\n\r\nconst Wrapper = styled.article`\r\n  position: relative;\r\n  @media screen and (max-width: 1023px) {\r\n    height: 150px;\r\n  }\r\n`;\r\n\r\nconst HeaderSection = styled.main`\r\n  position: relative;\r\n  height: 100%;\r\n  background-color: ${(props) => props.background};\r\n  border-radius: 18px;\r\n  overflow: hidden;\r\n  @media screen and (max-width: 1023px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst BodySection = styled.header`\r\n  position: absolute;\r\n  border-radius: 18px;\r\n  bottom: -1px;\r\n  left: -1px;\r\n  border: 1px solid ${(props) => props.background};\r\n  height: 80%;\r\n  width: 80%;\r\n  background-color: ${(props) => props.background};\r\n  padding: 0 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  \r\n  @media screen and (max-width: 1023px) {\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nconst HeaderImaeg = styled.img`\r\n  position: absolute;\r\n  top: -2%;\r\n  right: 6%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst HoursElapsedText = styled.p`\r\n  color: #fff;\r\n  font-size: 48px;\r\n  font-weight: 300;\r\n  margin: 0;\r\n`;\r\n\r\nconst BodyTop = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    filter: brightness(40);\r\n  }\r\n`;\r\n\r\nconst ElippsiesIcon = styled.img``;\r\n\r\nconst PreviousTimePeriodText = styled.small`\r\n  color: #fff;\r\n  opacity: 0.6;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst BodyBottom = styled.div`\r\n  @media screen and (max-width: 1023px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst headerColorPicker = (index) => {\r\n  switch(index){\r\n    case 0:\r\n      return \"liglhtRed\"\r\n    case 1:\r\n      return \"softBlue\"\r\n    case 2:\r\n      return \"lightRed\"\r\n    case 3:\r\n      return \"limeGreen\"\r\n    case 4:\r\n      return \"violet\"\r\n    case 5:\r\n      return \"softOrange\"\r\n    default:\r\n      return \"lightRed\"\r\n  }\r\n}\r\n\r\nconst headerImage = (imageName) => {\r\n  let imagePath = `./images/icon-`;\r\n  switch(imageName){\r\n    case \"Work\":\r\n      return imagePath.concat(\"work.svg\");\r\n    case \"Play\":\r\n      return imagePath.concat(\"play.svg\");\r\n    case \"Study\":\r\n      return imagePath.concat(\"study.svg\");\r\n    case \"Exercise\":\r\n      return imagePath.concat(\"exercise.svg\");\r\n    case \"Social\":\r\n      return imagePath.concat(\"social.svg\");\r\n    case \"Self Care\":\r\n      return imagePath.concat(\"self-care.svg\");\r\n    default:\r\n      return imagePath.concat(\"work.svg\");\r\n  }\r\n}\r\n\r\nconst handlePreviousTime = (timeframes) => {\r\n  console.log(\"+++++++++++++\");\r\n  console.log(timeframes);\r\n  if(timeframes === \"Daily\"){\r\n    return \"Yesterday\";\r\n  }\r\n  else if(timeframes === \"Weekly\"){\r\n    return \"Last Week\";\r\n  }else if(timeframes === \"Monthly\"){\r\n    return \"Last Month\";\r\n  }else{\r\n    return \"Last Week\";\r\n  }\r\n}\r\n\r\nconst TaskCard = ({ title, timeframes, index }) => {\r\n  const { selectedPeriod } = useContext(TimePeriodContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <Wrapper>\r\n      <HeaderSection background={colorsPallete[headerColorPicker(index)]}>\r\n        <HeaderImaeg src={headerImage(title)}></HeaderImaeg>\r\n      </HeaderSection>\r\n      <BodySection background={colorsPallete[\"darkBlue\"]} hover={colorsPallete[\"veryDarkBlue\"]}>\r\n        <BodyTop>\r\n          <Title>{title}</Title>\r\n          <Modal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} style={{\r\n            overlay: {\r\n              position: 'fixed',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: 'rgba(255, 255, 255, 0.4)',\r\n              border:0\r\n            },\r\n            content: {\r\n              opacity: 1,\r\n              borderRadius: 28,\r\n              backgroundColor: colorsPallete[headerColorPicker(index)],\r\n              position: 'absolute',\r\n              top:'30%',\r\n              bottom: '30%',\r\n              right: '40%',\r\n              left: '40%',\r\n              padding: 0,\r\n              overflow: 'clip',\r\n              margin: 0,\r\n            }          \r\n          }}>\r\n            <div style={{\r\n              position: 'relative', \r\n              backgroundColor: colorsPallete[headerColorPicker(index)], \r\n              height: '15%', \r\n              border: 0,}}>\r\n                <Title style={{fontSize: '30px', paddingLeft: '40px', paddingTop: '10px'}}>{title}</Title>\r\n                <img src={headerImage(title)} alt=\"\" style={{position: 'absolute',\r\n                  top: '-2%',\r\n                  right: '6%',\r\n                  objectFit: 'cover'}}/>\r\n            </div>\r\n            <div style={{\r\n              position: 'absolute', \r\n              backgroundColor: colorsPallete['darkBlue'], \r\n              width: '100%', \r\n              height: '85%', \r\n              border: 0, \r\n              borderRadius: '28px',\r\n              bottom: '-1px',\r\n              left: '-1px',\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n              }}\r\n              >\r\n                \r\n                 <BodyBottom>\r\n                    <HoursElapsedText>{`${timeframes[selectedPeriod.toLowerCase()].current}hrs`}</HoursElapsedText>\r\n                    <PreviousTimePeriodText>{`Last Week - ${timeframes[selectedPeriod.toLowerCase()].previous}hrs`}</PreviousTimePeriodText>\r\n                  </BodyBottom>\r\n              </div>\r\n          </Modal>\r\n          <Button onClick={() => setIsOpen(true)}>\r\n            <ElippsiesIcon src=\"./images/icon-ellipsis.svg\"></ElippsiesIcon>\r\n          </Button>\r\n        </BodyTop>\r\n        <BodyBottom>\r\n          <HoursElapsedText>{`${timeframes[selectedPeriod.toLowerCase()].current}hrs`}</HoursElapsedText>\r\n          <PreviousTimePeriodText>{`${handlePreviousTime(selectedPeriod)} - ${timeframes[selectedPeriod.toLowerCase()].previous}hrs`}</PreviousTimePeriodText>\r\n        </BodyBottom>\r\n      </BodySection>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TaskCard;","import React, { useContext } from \"react\";\r\nimport { TimePeriodContext } from \"../App\";\r\nimport styled from \"styled-components\";\r\nimport { colorsPallete } from \"../utilities/colors\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  color: #fff;\r\n  background-color: ${(props) => props.background};\r\n  grid-row: 1/3;\r\n  grid-column: 1;\r\n  height: 100%;\r\n  width: 95%;\r\n  border-radius: 18px;\r\n  @media (max-width: 1023px) {\r\n    padding-bottom: 4%;\r\n    grid-row: 1/3;\r\n    height: fit-content;\r\n  }\r\n`;\r\n\r\nconst PersonalInformationWrapper = styled.div`\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 10% 10%;\r\n  width: 80%;\r\n  height: 50%;\r\n  border-radius: 18px;\r\n  background-color: ${(props) => props.background};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  @media screen and (max-width: 1023px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 6% 10%;\r\n    gap: 10%;\r\n  }\r\n`;\r\n\r\nconst CircularProfilePicture = styled.img`\r\n  border-radius: 50%;\r\n  border: 3px solid #fff;\r\n  width: 40%;\r\n  height: auto;\r\n  @media screen and (max-width: 1023px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nconst ReportText = styled.small`\r\n  font-weight: 400;\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst Username = styled.h1`\r\n  font-weight: 300;\r\n  font-size: 40px;\r\n`;\r\n\r\nconst TimePeriodSelectionWrapper = styled.div`\r\n  padding: 5% 10%;\r\n  height: 30%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-evenly;\r\n  @media screen and (max-width: 1023px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    padding: 0;\r\n    padding-top: 3%;\r\n  }\r\n`;\r\n\r\nconst TimePeriod = styled.button`\r\n  color: #fff;\r\n  font-family: \"Rubik\", Arial, Helvetica, sans-serif;\r\n  font-weight: 200;\r\n  opacity: ${(props) => props.opacity};\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  background-color: transparent;\r\n  border: none;\r\n  @media screen and (max-width: 1023px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n  }\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst ProfileCard = ({ gridPosition }) => {\r\n  const { selectedPeriod, setSelectedPeriod } = useContext(TimePeriodContext);\r\n\r\n  const timePeriod = [\"Daily\", \"Weekly\", \"Monthly\"];\r\n  return (\r\n    <Wrapper gridPos={gridPosition} background={colorsPallete['darkBlue']}>\r\n      <PersonalInformationWrapper background={colorsPallete['blue']}>\r\n        <CircularProfilePicture src=\"./images/image-jeremy.png\"></CircularProfilePicture>\r\n        <div style={{paddingTop: '40px'}}>\r\n          <ReportText>Report for</ReportText>\r\n          <Username>Michael Solomon</Username>\r\n        </div>\r\n      </PersonalInformationWrapper>\r\n      <TimePeriodSelectionWrapper>\r\n        {timePeriod.map((period) => (\r\n          <TimePeriod\r\n            key={period}\r\n            opacity={period === selectedPeriod ? 1 : 0.4}\r\n            onClick={() => {\r\n              setSelectedPeriod(period);\r\n            }}\r\n          >\r\n            {period}\r\n          </TimePeriod>\r\n        ))}\r\n      </TimePeriodSelectionWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TaskCard from \"./components/TaskCard\";\nimport ProfileCard from \"./components/ProfileCard\";\nimport sampleData from \"./utilities/data\";\nimport { colorsPallete } from \"./utilities/colors\";\n\nexport const TimePeriodContext = React.createContext({});\n\nconst Wrapper = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => props.background};\n  height: 52vh;\n  padding: 24vh 14%;\n  @media screen and (max-width: 1023px) {\n    min-height: 100vh;\n    padding: 6vh 4%;\n    height: auto;\n  }\n`;\n\nconst GridLayout = styled.section`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  width: 100%;\n  height: 100%;\n  gap: 2em;\n  @media screen and (max-width: 1023px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(8, fit-content);\n    gap: 2em;\n  }\n`;\n\nfunction App() {\n  const [selectedPeriod, setSelectedPeriod] = useState(\"Weekly\");\n\n  return (\n        <Wrapper background={colorsPallete[\"veryDarkBlue\"]}>\n          <TimePeriodContext.Provider value={{ selectedPeriod, setSelectedPeriod }}>\n              <GridLayout>\n                <ProfileCard/>\n                  {sampleData.map((item, index) => (\n                    <TaskCard key={item.title} {...item} index={index}></TaskCard>\n                ))}\n              </GridLayout>\n          </TimePeriodContext.Provider>\n        </Wrapper>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}